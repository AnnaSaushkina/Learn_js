// Последнее значение цикла
// Какое последнее значение выведет этот код? Почему?

let i = 3;

while (i) {
  console.log( i-- );
}
// 3 2 1
// выводится до 1 потому что 0 = false


// Какие значения выведет цикл while?
// Для каждого цикла запишите, какие значения он выведет. Потом сравните с ответом.

// Оба цикла выводят console.log с одинаковыми значениями или нет?

// Префиксный вариант ++i:

let i2 = 0;
while (++i2 < 5) console.log( i );
// Постфиксный вариант i++
//1 2 3 4

let i3 = 0;
while (i3++ < 5) console.log( i );
//1 2 3 4 5

// Какие значения выведет цикл for?
// Для каждого цикла запишите, какие значения он выведет. Потом сравните с ответом.

// Оба цикла выведут console.log с одинаковыми значениями или нет?

// Постфиксная форма:
for (let i4 = 0; i4 < 5; i4++) console.log( i4 );
//  0 1 2 3 4

// Префиксная форма:
for (let i5 = 0; i5 < 5; ++i5) console.log( i5 );
// 0 1 2 3 4


// Выведите чётные числа
// При помощи цикла for выведите чётные числа от 2 до 10.
for (i= 0; i < 10; i++) {
    if (!(i % 2)) {
        console.log(i);
    }
}


// Замените for на while

// Перепишите код, заменив цикл for на while, без изменения поведения цикла.

for (let i = 0; i < 3; i++) {
  console.log( `number ${i}!` );
}


let second = 0;
while (second < 3) {
    console.log(`number ${second}!`)
    ++second
}
//number 0! number 1! number 2!



// Повторять цикл, пока ввод неверен
// Напишите цикл, который предлагает prompt ввести число, большее 100. Если посетитель ввёл другое число – попросить ввести ещё раз, и так далее.

// Цикл должен спрашивать число пока либо посетитель не введёт число, большее 100, либо не нажмёт кнопку Отмена (ESC).

// Предполагается, что посетитель вводит только числа. Предусматривать обработку нечисловых строк в этой задаче необязательно.

let testNums = [1, 20, 90, 95, 120]
let userNum = 0

while (userNum < testNums.length) {
    userNum++
    if ( testNums[userNum] < 100 ) 
        {
            console.log(`Вы ввели ${testNums[userNum]}. Введите число больше 100`)
        } else {
            console.log(`Нужное число "${testNums[userNum]}"(больше 100) введено`)
            break
        }
}



// АКТУАЛЬНАЯ ЗАДАЧА
// Вывести простые числа
// Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.

// Другими словами, n > 1 – простое, если при его делении на любое число кроме 1 и n есть остаток.

// Например, 5 это простое число, оно не может быть разделено без остатка на 2, 3 и 4.

// Напишите код, который выводит все простые числа из интервала от 2 до n.

// Для n = 10 результат должен быть 2,3,5,7.

// P.S. Код также должен легко модифицироваться для любых других интервалов.





// ▎Задачи с циклом while:
// 1. Напишите программу, которая запрашивает у пользователя числа, пока не будет введено отрицательное число. Найдите сумму всех введенных положительных чисел.

// 2. Создайте программу, которая генерирует случайные числа от 1 до 10, пока не выпадет число 7. Подсчитайте количество попыток.

// ▎Задачи с циклом do...while:
// 3. Создайте игру "Угадай число": компьютер загадывает число от 1 до 100, а пользователь должен его угадать. После каждой попытки компьютер сообщает "больше" или "меньше".

// 4. Напишите программу, которая запрашивает пароль у пользователя. Если пароль неверный, запрос повторяется. Ограничьте количество попыток до 3.

// ▎Задачи с циклом for:
// 5. Выведите все числа от 1 до 100, пропуская числа, кратные 3 (используйте continue).

// 6. Найдите первое число в диапазоне от 1 до 1000, которое делится на 17 без остатка (используйте break).

// ▎Задачи со смешанным использованием break и continue:
// 7. Напишите программу, которая выводит все двузначные числа, сумма цифр которых равна 8. Используйте break, если найдено более 5 таких чисел.

// 8. Создайте программу, которая находит все простые числа от 2 до 100. Используйте continue для оптимизации перебора делителей.


// ▎Решения:

// Задача 1
function sumPositiveNumbers() {
    let sum = 0;
    let num;
    while ((num = Number(prompt("Введите число:"))) >= 0) {
        sum += num;
    }
    return sum;
}

// Задача 2
function findSeven() {
    let attempts = 0;
    let num;
    while ((num = Math.floor(Math.random() * 10) + 1) !== 7) {
        attempts++;
    }
    return attempts + 1;
}

// Задача 3
function guessNumber() {
    const target = Math.floor(Math.random() * 100) + 1;
    let guess;
    do {
        guess = Number(prompt("Угадайте число от 1 до 100:"));
        if (guess > target) {
            alert("Меньше!");
        } else if (guess < target) {
            alert("Больше!");
        }
    } while (guess !== target);
    alert("Поздравляем! Вы угадали!");
}

// Задача 4
function checkPassword() {
    const correctPassword = "secret123";
    let attempts = 3;
    let userPassword;
    do {
        userPassword = console.log(`Введите пароль (осталось попыток: ${attempts})`);
        attempts--;
    } while (userPassword !== correctPassword && attempts > 0);
    return userPassword === correctPassword;
}

// Задача 5
function skipMultiplesOfThree() {
    for (let i = 1; i <= 100; i++) {
        if (i % 3 === 0) continue;
        console.log(i);
    }
}

// Задача 6
function findFirstDivisibleBy17() {
    for (let i = 1; i <= 1000; i++) {
        if (i % 17 === 0) {
            return i;
        }
    }
}

// Задача 7
function findNumbersWithSumEight() {
    let count = 0;
    for (let i = 10; i <= 99; i++) {
        let sum = Math.floor(i/10) + (i % 10);
        if (sum === 8) {
            console.log(i);
            count++;
            if (count === 5) break;
        }
    }
}

// Задача 8
function findPrimeNumbers() {
    outer: for (let i = 2; i <= 100; i++) {
        for (let j = 2; j < i; j++) {
            if (i % j === 0) continue outer;
        }
        console.log(i);
    }
}